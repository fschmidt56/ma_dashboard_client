{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\dashboard_client\\\\src\\\\components\\\\DistrictInfo.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Button from './Button';\nimport { proxyUrls } from '../utils/MapConfig';\n\nconst DistrictInfo = props => {\n  const [district, setDistrict] = useState(undefined);\n  const [fetched, setFetched] = useState(false);\n  const {\n    title,\n    fetchUrl,\n    defaultText\n  } = props;\n\n  function buttonClick() {\n    fetch(proxyUrls[4]).then(response => response.json()).then(data => {\n      const output = Object.keys(data[0]).map(i => data[i]); //@ts-ignore\n\n      console.log(output);\n    }).then(() => setFetched(true));\n  }\n\n  useEffect(() => {\n    let dropdown = document.createElement('select');\n    dropdown.length = 0;\n    let defaultOption = document.createElement('option');\n    defaultOption.text = defaultText;\n    dropdown.add(defaultOption);\n    dropdown.selectedIndex = 0;\n    document.getElementsByClassName('dropdown')[0].appendChild(dropdown);\n    const url = fetchUrl;\n    fetch(url).then(function (response) {\n      if (response.status !== 200) {\n        console.log('Status Code not 200: ' + response.status);\n        return;\n      }\n\n      response.json().then(function (data) {\n        let option;\n\n        for (let i = 0; i < data.length; i++) {\n          option = document.createElement('option');\n          option.text = data[i].stt_name;\n          option.value = data[i].stt_name;\n          dropdown.add(option);\n        }\n      });\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Stadtteildaten abrufen\",\n    clickButton: buttonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), fetched ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }\n  }, district) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }\n  }, \"Keine Daten.\"));\n};\n\nexport default DistrictInfo;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/components/DistrictInfo.tsx"],"names":["React","useEffect","useState","Button","proxyUrls","DistrictInfo","props","district","setDistrict","undefined","fetched","setFetched","title","fetchUrl","defaultText","buttonClick","fetch","then","response","json","data","output","Object","keys","map","i","console","log","dropdown","document","createElement","length","defaultOption","text","add","selectedIndex","getElementsByClassName","appendChild","url","status","option","stt_name","value","catch","err","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { IDistrictInfoProps } from '../types/types';\r\nimport Button from './Button'\r\nimport { proxyUrls } from '../utils/MapConfig';\r\n\r\nconst DistrictInfo = (props: IDistrictInfoProps) => {\r\n\r\n    const [district, setDistrict] = useState(undefined);\r\n    const [fetched, setFetched] = useState(false);\r\n\r\n    const {\r\n        title,\r\n        fetchUrl,\r\n        defaultText,\r\n    } = props\r\n\r\n    function buttonClick() {\r\n        fetch(proxyUrls[4])\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const output = Object.keys(data[0]).map(i => data[i])\r\n                //@ts-ignore\r\n                console.log(output)\r\n            })\r\n            .then(() => setFetched(true))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let dropdown = document.createElement('select');\r\n        dropdown.length = 0;\r\n\r\n        let defaultOption = document.createElement('option');\r\n        defaultOption.text = defaultText;\r\n\r\n        dropdown.add(defaultOption);\r\n        dropdown.selectedIndex = 0;\r\n        document.getElementsByClassName('dropdown')[0].appendChild(dropdown);\r\n\r\n        const url = fetchUrl;\r\n\r\n        fetch(url)\r\n            .then(\r\n                function (response) {\r\n                    if (response.status !== 200) {\r\n                        console.log('Status Code not 200: ' +\r\n                            response.status);\r\n                        return;\r\n                    }\r\n\r\n                    response.json().then(function (data) {\r\n                        let option;\r\n\r\n                        for (let i = 0; i < data.length; i++) {\r\n                            option = document.createElement('option');\r\n                            option.text = data[i].stt_name;\r\n                            option.value = data[i].stt_name;\r\n                            dropdown.add(option);\r\n                        }\r\n                    });\r\n                }\r\n            )\r\n            .catch(function (err) {\r\n                console.error(err);\r\n            });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <p>{title}</p>\r\n            <div className='dropdown'></div>\r\n            <Button\r\n                text='Stadtteildaten abrufen'\r\n                clickButton={buttonClick}\r\n            />\r\n            {fetched ? \r\n             <p>{district}</p>\r\n             :\r\n             <p>Keine Daten.</p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DistrictInfo;"]},"metadata":{},"sourceType":"module"}