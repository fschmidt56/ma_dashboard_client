{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\dashboard_client\\\\src\\\\components\\\\Table.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { MapUtils } from '../utils/MapUtils';\nimport { proxyUrls } from '../utils/MapConfig';\n\nconst Table = props => {\n  const {\n    title\n  } = props;\n  const [table, setTable] = useState([]);\n  const [count, setCount] = useState([]);\n\n  function createTablefromGeoJson() {\n    let result = [];\n    let number = [];\n    MapUtils.getGeojson(proxyUrls[1]).then(data => data).then(featureCollection => featureCollection.jsonb_build_object).then(features => {\n      for (let i = 0; i < features.features.length; i++) {\n        result.push(features.features[i].properties.stt_name);\n        count.push(features.features[i].properties.count);\n      }\n    }).then(() => {\n      setTable(result);\n      setCount(count);\n    });\n  }\n\n  useEffect(() => {\n    createTablefromGeoJson();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, table.map((value, key) => {\n    const tableKey = count[key];\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, value, \" | \", tableKey);\n  })));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/components/Table.tsx"],"names":["React","useEffect","useState","MapUtils","proxyUrls","Table","props","title","table","setTable","count","setCount","createTablefromGeoJson","result","number","getGeojson","then","data","featureCollection","jsonb_build_object","features","i","length","push","properties","stt_name","map","value","key","tableKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAwB;AAElC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAW,EAAX,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAW,EAAX,CAAlC;;AAEA,WAASU,sBAAT,GAAkC;AAC9B,QAAIC,MAAgB,GAAG,EAAvB;AACA,QAAIC,MAAgB,GAAG,EAAvB;AACAX,IAAAA,QAAQ,CAACY,UAAT,CAAoBX,SAAS,CAAC,CAAD,CAA7B,EACKY,IADL,CACUC,IAAI,IAAIA,IADlB,EAEKD,IAFL,CAEUE,iBAAiB,IAAIA,iBAAiB,CAACC,kBAFjD,EAGKH,IAHL,CAGUI,QAAQ,IAAI;AACd,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACA,QAAT,CAAkBE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/CR,QAAAA,MAAM,CAACU,IAAP,CAAYH,QAAQ,CAACA,QAAT,CAAkBC,CAAlB,EAAqBG,UAArB,CAAgCC,QAA5C;AACAf,QAAAA,KAAK,CAACa,IAAN,CAAWH,QAAQ,CAACA,QAAT,CAAkBC,CAAlB,EAAqBG,UAArB,CAAgCd,KAA3C;AACH;AACJ,KARL,EASKM,IATL,CASU,MAAM;AACRP,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAZL;AAaH;;AAGDT,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,sBAAsB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAJ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACkB,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvB,UAAMC,QAAQ,GAAGnB,KAAK,CAACkB,GAAD,CAAtB;AACA,wBACI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeD,KAAf,SAAyBE,QAAzB,CADJ;AAGH,GALA,CADL,CAFJ,CADJ;AAeH,CA7CD;;AA+CA,eAAexB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ITableProps } from '../types/types';\r\nimport { MapUtils } from '../utils/MapUtils';\r\nimport { proxyUrls } from '../utils/MapConfig';\r\n\r\nconst Table = (props: ITableProps) => {\r\n\r\n    const { title } = props\r\n\r\n    const [table, setTable] = useState<string[]>([])\r\n    const [count, setCount] = useState<string[]>([])\r\n\r\n    function createTablefromGeoJson() {\r\n        let result: string[] = [];\r\n        let number: string[] = [];\r\n        MapUtils.getGeojson(proxyUrls[1])\r\n            .then(data => data)\r\n            .then(featureCollection => featureCollection.jsonb_build_object)\r\n            .then(features => {\r\n                for (let i = 0; i < features.features.length; i++) {\r\n                    result.push(features.features[i].properties.stt_name)\r\n                    count.push(features.features[i].properties.count)\r\n                }\r\n            })\r\n            .then(() => {\r\n                setTable(result)\r\n                setCount(count)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        createTablefromGeoJson()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <p>{title}</p>\r\n            <ul>\r\n                {table.map((value, key) => {\r\n                    const tableKey = count[key]\r\n                    return (\r\n                        <li key={key}>{value} | {tableKey}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}