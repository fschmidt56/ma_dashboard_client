{"ast":null,"code":"import WFS from 'ol/format/WFS';\nimport View from \"ol/View\";\nimport Feature from \"ol/Feature\";\nimport LineString from \"ol/geom/LineString\";\nconst baseLayerArr = ['https://{1-4}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', 'https://{1-4}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', 'https://{1-4}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png', 'https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}', 'https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}', 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'];\nexport const baseLayerUrl = baseLayerArr[0];\nexport const mapCenter = [774590.7496, 6610917.3520];\nexport const mapZoom = 11;\nexport const maxZoom = 19;\nexport const minZoom = 10;\nexport const rotationStatus = false;\nexport const view = new View({\n  center: mapCenter,\n  zoom: mapZoom,\n  maxZoom: maxZoom,\n  minZoom: minZoom,\n  enableRotation: rotationStatus\n});\nexport const geoserverWfsUrl = 'http://192.168.2.185:8080/geoserver/pg/wfs?service=WFS&version=1.1.0';\nexport const typeName = ['pg:hu_koeln', 'pg:tracks'];\nexport const wfsTransaction = new WFS();\nexport const updateParameters = {\n  featureNS: 'pg',\n  featurePrefix: 'pg',\n  featureType: typeName[0],\n  nativeElements: [],\n  srsName: 'EPSG:3857'\n};\nexport const insertParameters = {\n  featureNS: 'pg',\n  featurePrefix: 'pg',\n  featureType: typeName[1],\n  nativeElements: [],\n  srsName: 'EPSG:3857'\n};\nexport const credentials = {\n  username: 'admin',\n  password: 'geoserver',\n  connectionString: 'admin:geoserver'\n};\nexport const geoserverHeaders = new Headers({\n  'Content-Type': 'text/plain',\n  'Authorization': 'Basic ' + btoa(credentials.connectionString)\n});\nexport const trackFeature = new Feature({\n  geom: new LineString([])\n});\nexport const usedIcons = ['fa fa-home', 'fa fa-info', 'fa fa-mouse-pointer', 'fa fa-map', 'fa fa-twitter', 'fa fa-cogs', 'fa fa-power-off', 'fa fa-chevron-down', 'fa fa-chevron-up'];","map":{"version":3,"sources":["C:/Users/Fabi/Documents/dashboard_client/src/utils/MapConfig.tsx"],"names":["WFS","View","Feature","LineString","baseLayerArr","baseLayerUrl","mapCenter","mapZoom","maxZoom","minZoom","rotationStatus","view","center","zoom","enableRotation","geoserverWfsUrl","typeName","wfsTransaction","updateParameters","featureNS","featurePrefix","featureType","nativeElements","srsName","insertParameters","credentials","username","password","connectionString","geoserverHeaders","Headers","btoa","trackFeature","geom","usedIcons"],"mappings":"AACA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,MAAMC,YAAsB,GAAG,CAC3B,iEAD2B,EAE3B,kEAF2B,EAG3B,4EAH2B,EAI3B,8GAJ2B,EAK3B,6GAL2B,EAM3B,+FAN2B,CAA/B;AASA,OAAO,MAAMC,YAAoB,GAAGD,YAAY,CAAC,CAAD,CAAzC;AACP,OAAO,MAAME,SAAmB,GAAG,CAAC,WAAD,EAAa,YAAb,CAA5B;AACP,OAAO,MAAMC,OAAe,GAAG,EAAxB;AACP,OAAO,MAAMC,OAAe,GAAG,EAAxB;AACP,OAAO,MAAMC,OAAe,GAAG,EAAxB;AACP,OAAO,MAAMC,cAAuB,GAAG,KAAhC;AACP,OAAO,MAAMC,IAAI,GAAG,IAAIV,IAAJ,CAAS;AACzBW,EAAAA,MAAM,EAAEN,SADiB;AAEzBO,EAAAA,IAAI,EAAEN,OAFmB;AAGzBC,EAAAA,OAAO,EAAEA,OAHgB;AAIzBC,EAAAA,OAAO,EAAEA,OAJgB;AAKzBK,EAAAA,cAAc,EAAEJ;AALS,CAAT,CAAb;AAOP,OAAO,MAAMK,eAAuB,GAAG,sEAAhC;AACP,OAAO,MAAMC,QAAkB,GAAG,CAC9B,aAD8B,EAE9B,WAF8B,CAA3B;AAIP,OAAO,MAAMC,cAAmB,GAAG,IAAIjB,GAAJ,EAA5B;AAEP,OAAO,MAAMkB,gBAA0D,GAAG;AACtEC,EAAAA,SAAS,EAAE,IAD2D;AAEtEC,EAAAA,aAAa,EAAE,IAFuD;AAGtEC,EAAAA,WAAW,EAAEL,QAAQ,CAAC,CAAD,CAHiD;AAItEM,EAAAA,cAAc,EAAE,EAJsD;AAKtEC,EAAAA,OAAO,EAAE;AAL6D,CAAnE;AAQP,OAAO,MAAMC,gBAA0D,GAAG;AACtEL,EAAAA,SAAS,EAAE,IAD2D;AAEtEC,EAAAA,aAAa,EAAE,IAFuD;AAGtEC,EAAAA,WAAW,EAAEL,QAAQ,CAAC,CAAD,CAHiD;AAItEM,EAAAA,cAAc,EAAE,EAJsD;AAKtEC,EAAAA,OAAO,EAAE;AAL6D,CAAnE;AAQP,OAAO,MAAME,WAA6C,GAAG;AACzDC,EAAAA,QAAQ,EAAE,OAD+C;AAEzDC,EAAAA,QAAQ,EAAE,WAF+C;AAGzDC,EAAAA,gBAAgB,EAAE;AAHuC,CAAtD;AAMP,OAAO,MAAMC,gBAAyB,GAAG,IAAIC,OAAJ,CAAY;AACjD,kBAAgB,YADiC;AAEjD,mBAAiB,WAAWC,IAAI,CAACN,WAAW,CAACG,gBAAb;AAFiB,CAAZ,CAAlC;AAKP,OAAO,MAAMI,YAAqB,GAAG,IAAI9B,OAAJ,CAAY;AAC7C+B,EAAAA,IAAI,EAAE,IAAI9B,UAAJ,CAAe,EAAf;AADuC,CAAZ,CAA9B;AAIP,OAAO,MAAM+B,SAAmB,GAAG,CAC/B,YAD+B,EAE/B,YAF+B,EAG/B,qBAH+B,EAI/B,WAJ+B,EAK/B,eAL+B,EAM/B,YAN+B,EAO/B,iBAP+B,EAQ/B,oBAR+B,EAS/B,kBAT+B,CAA5B","sourcesContent":["import { ITransactionsGeoserver, ITransactionsCredentials } from \"../types/types\";\r\nimport WFS from 'ol/format/WFS';\r\nimport View from \"ol/View\";\r\nimport Feature from \"ol/Feature\";\r\nimport LineString from \"ol/geom/LineString\";\r\n\r\nconst baseLayerArr: string[] = [\r\n    'https://{1-4}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png',\r\n    'https://{1-4}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png',\r\n    'https://{1-4}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}',\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}',\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\r\n];\r\n\r\nexport const baseLayerUrl: string = baseLayerArr[0];\r\nexport const mapCenter: number[] = [774590.7496,6610917.3520];\r\nexport const mapZoom: number = 11;\r\nexport const maxZoom: number = 19;\r\nexport const minZoom: number = 10;\r\nexport const rotationStatus: boolean = false;\r\nexport const view = new View({\r\n    center: mapCenter,\r\n    zoom: mapZoom,\r\n    maxZoom: maxZoom,\r\n    minZoom: minZoom,\r\n    enableRotation: rotationStatus,\r\n})\r\nexport const geoserverWfsUrl: string = 'http://192.168.2.185:8080/geoserver/pg/wfs?service=WFS&version=1.1.0';\r\nexport const typeName: string[] = [\r\n    'pg:hu_koeln',\r\n    'pg:tracks'\r\n];\r\nexport const wfsTransaction: WFS = new WFS();\r\n\r\nexport const updateParameters: ITransactionsGeoserver<string, object[]> = {\r\n    featureNS: 'pg',\r\n    featurePrefix: 'pg',\r\n    featureType: typeName[0],\r\n    nativeElements: [],\r\n    srsName: 'EPSG:3857',\r\n};\r\n\r\nexport const insertParameters: ITransactionsGeoserver<string, object[]> = {\r\n    featureNS: 'pg',\r\n    featurePrefix: 'pg',\r\n    featureType: typeName[1],\r\n    nativeElements: [],\r\n    srsName: 'EPSG:3857',\r\n};\r\n\r\nexport const credentials: ITransactionsCredentials<string> = {\r\n    username: 'admin',\r\n    password: 'geoserver',\r\n    connectionString: 'admin:geoserver'\r\n};\r\n\r\nexport const geoserverHeaders: Headers = new Headers({\r\n    'Content-Type': 'text/plain',\r\n    'Authorization': 'Basic ' + btoa(credentials.connectionString)\r\n});\r\n\r\nexport const trackFeature: Feature = new Feature({\r\n    geom: new LineString([]),\r\n})\r\n\r\nexport const usedIcons: string[] = [\r\n    'fa fa-home',\r\n    'fa fa-info',\r\n    'fa fa-mouse-pointer',\r\n    'fa fa-map',\r\n    'fa fa-twitter',\r\n    'fa fa-cogs',\r\n    'fa fa-power-off',\r\n    'fa fa-chevron-down',\r\n    'fa fa-chevron-up',\r\n]\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}