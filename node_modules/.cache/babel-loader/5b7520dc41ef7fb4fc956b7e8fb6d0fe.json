{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Documents\\\\dashboard_client\\\\src\\\\components\\\\Table.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { MapUtils } from '../utils/MapUtils';\nimport { proxyUrls } from '../utils/MapConfig';\n\nconst Table = props => {\n  const [table, setTable] = useState([]);\n\n  function createTablefromGeoJson() {\n    let result = [];\n    MapUtils.getGeojson(proxyUrls[1]).then(data => data).then(featureCollection => featureCollection.jsonb_build_object).then(features => {\n      console.log(features.features);\n\n      for (let i = 0; i < features.features.length; i++) {\n        result.push(features.features[i].properties.stt_name);\n      }\n    }).then(() => setTable(result));\n  }\n\n  useEffect(() => {\n    createTablefromGeoJson();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, table.map((item, key) => /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 43\n    }\n  }, item))));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/Fabi/Documents/dashboard_client/src/components/Table.tsx"],"names":["React","useEffect","useState","MapUtils","proxyUrls","Table","props","table","setTable","createTablefromGeoJson","result","getGeojson","then","data","featureCollection","jsonb_build_object","features","console","log","i","length","push","properties","stt_name","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAwB;AAElC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAW,EAAX,CAAlC;;AAEA,WAASO,sBAAT,GAAkC;AAC9B,QAAIC,MAAgB,GAAG,EAAvB;AACAP,IAAAA,QAAQ,CAACQ,UAAT,CAAoBP,SAAS,CAAC,CAAD,CAA7B,EACKQ,IADL,CACUC,IAAI,IAAIA,IADlB,EAEKD,IAFL,CAEUE,iBAAiB,IAAIA,iBAAiB,CAACC,kBAFjD,EAGKH,IAHL,CAGUI,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACA,QAArB;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACA,QAAT,CAAkBI,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/CT,QAAAA,MAAM,CAACW,IAAP,CAAYL,QAAQ,CAACA,QAAT,CAAkBG,CAAlB,EAAqBG,UAArB,CAAgCC,QAA5C;AACF;AACL,KARL,EASKX,IATL,CASU,MAAMJ,QAAQ,CAACE,MAAD,CATxB;AAUH;;AAGDT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,sBAAsB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,uDAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBAAe;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,IAAf,CAAzB,CADL,CAFJ,CADJ;AAUH,CAjCD;;AAmCA,eAAepB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ITableProps } from '../types/types';\r\nimport { MapUtils } from '../utils/MapUtils';\r\nimport { proxyUrls } from '../utils/MapConfig';\r\n\r\nconst Table = (props: ITableProps) => {\r\n\r\n    const [table, setTable] = useState<string[]>([])\r\n\r\n    function createTablefromGeoJson() {\r\n        let result: string[] = [];\r\n        MapUtils.getGeojson(proxyUrls[1])\r\n            .then(data => data)\r\n            .then(featureCollection => featureCollection.jsonb_build_object)\r\n            .then(features => {\r\n                console.log(features.features)\r\n                for (let i = 0; i < features.features.length; i++) {\r\n                    result.push(features.features[i].properties.stt_name)\r\n                 }\r\n            })\r\n            .then(() => setTable(result))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        createTablefromGeoJson()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n\r\n            <ul>\r\n                {table.map((item, key) => <li key={key}>{item}</li>)}\r\n            </ul>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}