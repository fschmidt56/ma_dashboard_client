{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\dashboard_client\\\\src\\\\components\\\\RowTwo.tsx\";\nimport React from 'react';\nimport Column from './Column';\nimport DistrictInfo from './DistrictInfo';\nimport { proxyUrls } from '../utils/MapConfig';\nimport Chart from './Chart';\nimport TabsComp from './TabsComp';\nimport TabContent from './TabContent';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst RowTwo = props => {\n  const district = useSelector(state => state.currentDistrictState.district);\n  const dispatch = useDispatch();\n  let {\n    color,\n    height,\n    padding\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      backgroundColor: color[0],\n      height: height,\n      padding: padding\n    },\n    content: /*#__PURE__*/React.createElement(DistrictInfo, {\n      title: \"W\\xE4hle einen Stadtteil aus.\",\n      defaultText: \"Ausw\\xE4hlen...\",\n      fetchUrl: proxyUrls[3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    style: {\n      backgroundColor: color[1],\n      height: height,\n      padding: padding\n    },\n    content: 'Extending Volunteered Geographic Information (VGI) with Geospatial Software as a Service: Participatory Asset Mapping Infrastructures for Urban Health, geoserver credetials, postgres user, Diagramm Legende Karte, selected Features dynamischer,  sql injection, loading while fetching, Tabs diagramm switch gesamt stadtteil',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    style: {\n      backgroundColor: color[2],\n      height: height,\n      padding: padding\n    },\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Anteil besuchter | unbesuchter Geb\\xE4ude (%)\"), /*#__PURE__*/React.createElement(TabsComp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TabContent, {\n      label: \"Gesamtes Stadtgebiet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      id: \"0\",\n      key: \"stadtgebiet\",\n      chartHeading: \"K\\xF6ln\",\n      colors: ['rgba(179,0,0,0.75)', 'rgba(40,150,0,0.75)'],\n      hoverColors: ['rgba(179,0,0,1)', 'rgba(40,150,0,1)'],\n      urlToFetch: proxyUrls[5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(TabContent, {\n      label: \"Gew\\xE4hlter Stadtteil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      id: \"1\",\n      key: \"stadtteil\",\n      chartHeading: district,\n      colors: ['rgba(234,160,91,0.75)', 'rgba(91,171,234,0.75)'],\n      hoverColors: ['rgba(234,160,91,1)', 'rgba(91,171,234,1)'] //@ts-ignore\n      ,\n      urlToFetch: `${proxyUrls[8]}${name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default RowTwo;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/components/RowTwo.tsx"],"names":["React","Column","DistrictInfo","proxyUrls","Chart","TabsComp","TabContent","useDispatch","useSelector","RowTwo","props","district","state","currentDistrictState","dispatch","color","height","padding","backgroundColor","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { IRowProps } from '../types/types';\r\nimport Column from './Column';\r\nimport DistrictInfo from './DistrictInfo';\r\nimport { proxyUrls } from '../utils/MapConfig';\r\nimport Chart from './Chart';\r\nimport TabsComp from './TabsComp';\r\nimport TabContent from './TabContent';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setDistrict } from '../redux/actions/setDistrictAction';\r\nimport { RootState } from '../redux/store/store';\r\n\r\nconst RowTwo = (props: IRowProps) => {\r\n    const district = useSelector((state: RootState) => state.currentDistrictState.district);\r\n    const dispatch = useDispatch();\r\n\r\n    let {\r\n        color,\r\n        height,\r\n        padding,\r\n    } = props\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <Column style={{\r\n                    backgroundColor: color[0],\r\n                    height: height,\r\n                    padding: padding,\r\n                }}\r\n                    content={\r\n                        <DistrictInfo\r\n                            title='Wähle einen Stadtteil aus.'\r\n                            defaultText='Auswählen...'\r\n                            fetchUrl={proxyUrls[3]}\r\n                        />\r\n                    }\r\n                />\r\n                <Column style={{\r\n                    backgroundColor: color[1],\r\n                    height: height,\r\n                    padding: padding,\r\n                }}\r\n                    content={'Extending Volunteered Geographic Information (VGI) with Geospatial Software as a Service: Participatory Asset Mapping Infrastructures for Urban Health, geoserver credetials, postgres user, Diagramm Legende Karte, selected Features dynamischer,  sql injection, loading while fetching, Tabs diagramm switch gesamt stadtteil'}\r\n                />\r\n                <Column style={{\r\n                    backgroundColor: color[2],\r\n                    height: height,\r\n                    padding: padding,\r\n                }}\r\n                    content={\r\n                        <>\r\n                            <p>Anteil besuchter | unbesuchter Gebäude (%)</p>\r\n                            <TabsComp>\r\n                                <TabContent label='Gesamtes Stadtgebiet'>\r\n                                    <Chart\r\n                                        id='0'\r\n                                        key='stadtgebiet'\r\n                                        chartHeading='Köln'\r\n                                        colors={['rgba(179,0,0,0.75)', 'rgba(40,150,0,0.75)']}\r\n                                        hoverColors={['rgba(179,0,0,1)', 'rgba(40,150,0,1)']}\r\n                                        urlToFetch={proxyUrls[5]}\r\n                                    />\r\n                                </TabContent>\r\n                                <TabContent label='Gewählter Stadtteil'>\r\n                                    <Chart\r\n                                        id='1'\r\n                                        key='stadtteil'\r\n                                        chartHeading={district}\r\n                                        colors={['rgba(234,160,91,0.75)', 'rgba(91,171,234,0.75)']}\r\n                                        hoverColors={['rgba(234,160,91,1)', 'rgba(91,171,234,1)']}\r\n                                        //@ts-ignore\r\n                                        urlToFetch={`${proxyUrls[8]}${name}`}\r\n                                    />\r\n                                </TabContent>\r\n                            </TabsComp>\r\n\r\n\r\n                        </>\r\n                    }\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RowTwo;"]},"metadata":{},"sourceType":"module"}