{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\dashboard_client\\\\src\\\\components\\\\UserInfo.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport { greenColors } from '../utils/MapStyles';\n\nconst UserInfo = props => {\n  const [userCount, setUserCount] = useState(0);\n  const [changeCount, setChangeCount] = useState(0);\n  const [fetchedCount, setFetchtedCount] = useState(false);\n  const {\n    heading\n  } = props;\n  useEffect(() => {\n    let changes = 0;\n    fetch('http://192.168.2.185:8000/userInfo').then(data => data.json()).then(res => {\n      setUserCount(res.length);\n\n      for (let i = 0; i < res.length; i++) {\n        changes += parseInt(res[i].count);\n      }\n    }).then(() => setChangeCount(changes)).then(() => setFetchtedCount(true));\n  }, []);\n\n  function renderUsers() {\n    return [...Array(userCount)].map((e, i) => /*#__PURE__*/React.createElement(\"i\", {\n      key: i,\n      style: {\n        color: greenColors[6]\n      },\n      className: \"fa fa-user fa-2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 52\n      }\n    }));\n  }\n\n  function renderChanges() {\n    return [...Array(changeCount)].map((e, i) => /*#__PURE__*/React.createElement(\"i\", {\n      key: i,\n      style: {\n        color: greenColors[6]\n      },\n      className: \"fa fa-draw-polygon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 54\n      }\n    }));\n  }\n\n  function render() {\n    renderUsers();\n    renderChanges();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, heading), fetchedCount ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, userCount), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 48\n    }\n  }, \"Nutzer haben Daten beigesteuert.\"), renderUsers(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 102\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, changeCount), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 50\n    }\n  }, \"Hausumringe sind editiert worden.\"), renderChanges(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 107\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, \"Dies entspricht im Schnitt\"), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 62\n    }\n  }, changeCount / userCount), \" Beitr\\xE4gen je User.\") : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default UserInfo;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/components/UserInfo.tsx"],"names":["React","useState","useEffect","Loading","greenColors","UserInfo","props","userCount","setUserCount","changeCount","setChangeCount","fetchedCount","setFetchtedCount","heading","changes","fetch","then","data","json","res","length","i","parseInt","count","renderUsers","Array","map","e","color","renderChanges","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { IUserInfoProps } from '../types/types';\r\nimport Loading from './Loading';\r\nimport { greenColors } from '../utils/MapStyles';\r\n\r\nconst UserInfo = (props: IUserInfoProps) => {\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [changeCount, setChangeCount] = useState(0);\r\n    const [fetchedCount, setFetchtedCount] = useState(false);\r\n\r\n    const { heading } = props;\r\n\r\n    useEffect(() => {\r\n        let changes: number = 0;\r\n        fetch('http://192.168.2.185:8000/userInfo')\r\n            .then(data => data.json())\r\n            .then(res => {\r\n                setUserCount(res.length)\r\n                for (let i = 0; i < res.length; i++) {\r\n                    changes += parseInt(res[i].count);\r\n                }\r\n            })\r\n            .then(() => setChangeCount(changes))\r\n            .then(() => setFetchtedCount(true))\r\n    }, [])\r\n\r\n\r\n    function renderUsers() {\r\n        return [...Array(userCount)].map((e, i) => <i key={i} style={{color: greenColors[6]}} className='fa fa-user fa-2x'></i>)\r\n    }\r\n\r\n    function renderChanges() {\r\n        return [...Array(changeCount)].map((e, i) => <i key={i} style={{color: greenColors[6]}} className='fa fa-draw-polygon'></i>)\r\n    }\r\n\r\n    function render() {\r\n        renderUsers()\r\n        renderChanges()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p>{heading}</p>\r\n                {\r\n                    fetchedCount ?\r\n                        <>\r\n                            <b>{userCount}</b> <p>Nutzer haben Daten beigesteuert.</p>{renderUsers()}<br></br>\r\n                            <b>{changeCount}</b> <p>Hausumringe sind editiert worden.</p>{renderChanges()}<br></br>\r\n                            <p>Dies entspricht im Schnitt</p><b>{changeCount / userCount}</b> Beitr√§gen je User.\r\n                        </>\r\n                        :\r\n                        <Loading />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}