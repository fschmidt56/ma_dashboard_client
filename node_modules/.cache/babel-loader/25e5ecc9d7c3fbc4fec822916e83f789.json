{"ast":null,"code":"import Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nexport const fillOpacity = 0.75;\nexport function defaultStyle(feature, classes) {\n  const featureCount = getFillColor(feature.get('count'), classes, blueColors);\n  let style = new Style({\n    fill: new Fill({\n      color: featureCount\n    }),\n    stroke: new Stroke({\n      color: featureCount\n    })\n  });\n  return style;\n}\nexport function getFillColor(d, classes, colorArray) {\n  return d > classes[6] ? colorArray[6] : d > classes[5] ? colorArray[5] : d > classes[4] ? colorArray[4] : d > classes[3] ? colorArray[3] : d > classes[2] ? colorArray[2] : d > classes[1] ? colorArray[1] : d > classes[0] ? colorArray[0] : 'rgba(255,255,255,1)';\n}\nexport const greenColors = [`rgba(0,53,96,${fillOpacity})`, `rgba(56,82,121,${fillOpacity})`, `rgba(96,114,146,${fillOpacity})`, `rgba(0,53,96,${fillOpacity})`, `rgba(0,53,96,${fillOpacity})`, `rgba(0,53,96,${fillOpacity})`, `rgba(241,241,241,${fillOpacity})`];\nexport const blueColors = [`rgba(241,241,241,1)`, `rgba(214,218,227,${fillOpacity})`, `rgba(174,182,200,${fillOpacity})`, `rgba(135,147,173,${fillOpacity})`, `rgba(96,114,146,${fillOpacity})`, `rgba(56,82,121,${fillOpacity})`, `rgba(0,53,96,${fillOpacity})`];","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/utils/MapStyles.tsx"],"names":["Style","Stroke","Fill","fillOpacity","defaultStyle","feature","classes","featureCount","getFillColor","get","blueColors","style","fill","color","stroke","d","colorArray","greenColors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAGA,OAAO,MAAMC,WAAmB,GAAG,IAA5B;AAEP,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA4CC,OAA5C,EAAqE;AACxE,QAAMC,YAAY,GAAGC,YAAY,CAACH,OAAO,CAACI,GAAR,CAAY,OAAZ,CAAD,EAAsBH,OAAtB,EAA+BI,UAA/B,CAAjC;AACA,MAAIC,KAAY,GAAG,IAAIX,KAAJ,CAAU;AACzBY,IAAAA,IAAI,EAAE,IAAIV,IAAJ,CAAS;AACXW,MAAAA,KAAK,EAAEN;AADI,KAAT,CADmB;AAIzBO,IAAAA,MAAM,EAAE,IAAIb,MAAJ,CAAW;AACfY,MAAAA,KAAK,EAAEN;AADQ,KAAX;AAJiB,GAAV,CAAnB;AAQA,SAAOI,KAAP;AACH;AAED,OAAO,SAASH,YAAT,CAAsBO,CAAtB,EAAiCT,OAAjC,EAAmDU,UAAnD,EAAyE;AAC5E,SAAOD,CAAC,GAAGT,OAAO,CAAC,CAAD,CAAX,GAAiBU,UAAU,CAAC,CAAD,CAA3B,GACHD,CAAC,GAAGT,OAAO,CAAC,CAAD,CAAX,GAAiBU,UAAU,CAAC,CAAD,CAA3B,GACAD,CAAC,GAAGT,OAAO,CAAC,CAAD,CAAX,GAAiBU,UAAU,CAAC,CAAD,CAA3B,GACAD,CAAC,GAAGT,OAAO,CAAC,CAAD,CAAX,GAAiBU,UAAU,CAAC,CAAD,CAA3B,GACAD,CAAC,GAAGT,OAAO,CAAC,CAAD,CAAX,GAAiBU,UAAU,CAAC,CAAD,CAA3B,GACAD,CAAC,GAAGT,OAAO,CAAC,CAAD,CAAX,GAAiBU,UAAU,CAAC,CAAD,CAA3B,GACAD,CAAC,GAAGT,OAAO,CAAC,CAAD,CAAX,GAAiBU,UAAU,CAAC,CAAD,CAA3B,GACA,qBAPJ;AAQH;AAED,OAAO,MAAMC,WAAqB,GAAG,CAChC,gBAAed,WAAY,GADK,EAEhC,kBAAiBA,WAAY,GAFG,EAGhC,mBAAkBA,WAAY,GAHE,EAIhC,gBAAeA,WAAY,GAJK,EAKhC,gBAAeA,WAAY,GALK,EAMhC,gBAAeA,WAAY,GANK,EAOhC,oBAAmBA,WAAY,GAPC,CAA9B;AAUP,OAAO,MAAMO,UAAmB,GAAG,CAC9B,qBAD8B,EAE9B,oBAAmBP,WAAY,GAFD,EAG9B,oBAAmBA,WAAY,GAHD,EAI9B,oBAAmBA,WAAY,GAJD,EAK9B,mBAAkBA,WAAY,GALA,EAM9B,kBAAiBA,WAAY,GANC,EAO9B,gBAAeA,WAAY,GAPG,CAA5B","sourcesContent":["import Style from \"ol/style/Style\";\r\nimport Stroke from \"ol/style/Stroke\";\r\nimport Fill from \"ol/style/Fill\";\r\nimport { FeatureLike } from \"ol/Feature\";\r\n\r\nexport const fillOpacity: number = 0.75;\r\n\r\nexport function defaultStyle(feature: FeatureLike, classes:number[]): Style {\r\n    const featureCount = getFillColor(feature.get('count'),classes, blueColors);\r\n    let style: Style = new Style({\r\n        fill: new Fill({\r\n            color: featureCount,\r\n        }),\r\n        stroke: new Stroke({\r\n            color: featureCount,\r\n        })\r\n    });\r\n    return style;\r\n}\r\n\r\nexport function getFillColor(d: number, classes:number[], colorArray: string[]) {\r\n    return d > classes[6] ? colorArray[6] :\r\n        d > classes[5] ? colorArray[5] :\r\n        d > classes[4] ? colorArray[4] :\r\n        d > classes[3] ? colorArray[3] :\r\n        d > classes[2] ? colorArray[2] :\r\n        d > classes[1] ? colorArray[1] :\r\n        d > classes[0] ? colorArray[0] :\r\n        'rgba(255,255,255,1)'\r\n}\r\n    \r\nexport const greenColors: string[] = [\r\n    `rgba(0,53,96,${fillOpacity})`,\r\n    `rgba(56,82,121,${fillOpacity})`,\r\n    `rgba(96,114,146,${fillOpacity})`,\r\n    `rgba(0,53,96,${fillOpacity})`,\r\n    `rgba(0,53,96,${fillOpacity})`,\r\n    `rgba(0,53,96,${fillOpacity})`,\r\n    `rgba(241,241,241,${fillOpacity})`,\r\n];\r\n\r\nexport const blueColors:string[] = [\r\n    `rgba(241,241,241,1)`,\r\n    `rgba(214,218,227,${fillOpacity})`,\r\n    `rgba(174,182,200,${fillOpacity})`,\r\n    `rgba(135,147,173,${fillOpacity})`,\r\n    `rgba(96,114,146,${fillOpacity})`,\r\n    `rgba(56,82,121,${fillOpacity})`,\r\n    `rgba(0,53,96,${fillOpacity})`,\r\n]"]},"metadata":{},"sourceType":"module"}