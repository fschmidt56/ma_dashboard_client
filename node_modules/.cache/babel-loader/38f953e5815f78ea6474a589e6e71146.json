{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\dashboard_client\\\\src\\\\components\\\\Legend.tsx\";\nimport React, { useState } from 'react';\n\nconst Legend = props => {\n  const [classes, setClasses] = useState([0, 87, 173, 260, 346, 433, 519]);\n  const [colors, setColors] = useState(['rgba(180,180,180,0.75)', 'rgba(254,240,217,0.75)', 'rgba(253,212,158,0.75)', 'rgba(253,187,132,0.75)', 'rgba(252,141,89,0.75)', 'rgba(227,74,51,0.75)', 'rgba(179,0,0,0.75)']);\n\n  function renderLabels(index) {\n    return classes.map((child, index) => ' > ' + child[index]);\n  }\n\n  function renderSvg() {\n    return colors.map((child, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"25\",\n      height: \"25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      width: \"25\",\n      height: \"25\",\n      fill: child,\n      strokeWidth: \"0.75\",\n      stroke: child,\n      fillOpacity: \"0.75\",\n      strokeOpacity: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, ' > ' + classes[index])));\n  }\n\n  const {\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, title), renderSvg());\n};\n\nexport default Legend;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/components/Legend.tsx"],"names":["React","useState","Legend","props","classes","setClasses","colors","setColors","renderLabels","index","map","child","renderSvg","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAyB;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,CAAD,CAAtC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CACjC,wBADiC,EAEjC,wBAFiC,EAGjC,wBAHiC,EAIjC,wBAJiC,EAKjC,uBALiC,EAMjC,sBANiC,EAOjC,oBAPiC,CAAD,CAApC;;AAWA,WAASO,YAAT,CAAsBC,KAAtB,EAAkC;AAC9B,WAAOL,OAAO,CAACM,GAAR,CAAY,CAACC,KAAD,EAAaF,KAAb,KACf,QAAQE,KAAK,CAACF,KAAD,CADV,CAAP;AAGH;;AAED,WAASG,SAAT,GAAqB;AACjB,WAAON,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAaF,KAAb,kBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,IAAX;AAAgB,MAAA,MAAM,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAC,IADV;AAEI,MAAA,MAAM,EAAC,IAFX;AAGI,MAAA,IAAI,EAAEE,KAHV;AAII,MAAA,WAAW,EAAC,MAJhB;AAKI,MAAA,MAAM,EAAEA,KALZ;AAMI,MAAA,WAAW,EAAC,MANhB;AAOI,MAAA,aAAa,EAAC,GAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,QAAQP,OAAO,CAACK,KAAD,CAAtB,CAZJ,CADG,CAAP;AAkBH;;AAED,QAAM;AAAEI,IAAAA;AAAF,MAAYV,KAAlB;AACA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIU,KAAJ,CADJ,EAEKD,SAAS,EAFd,CADJ;AAMH,CAhDD;;AAkDA,eAAeV,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { ILegendProps } from '../types/types';\r\n\r\nconst Legend = (props: ILegendProps) => {\r\n\r\n    const [classes, setClasses] = useState([0, 87, 173, 260, 346, 433, 519]);\r\n    const [colors, setColors] = useState([\r\n        'rgba(180,180,180,0.75)',\r\n        'rgba(254,240,217,0.75)',\r\n        'rgba(253,212,158,0.75)',\r\n        'rgba(253,187,132,0.75)',\r\n        'rgba(252,141,89,0.75)',\r\n        'rgba(227,74,51,0.75)',\r\n        'rgba(179,0,0,0.75)',\r\n\r\n    ])\r\n\r\n    function renderLabels(index: any) {\r\n        return classes.map((child: any, index:number) => (\r\n            ' > ' + child[index]\r\n        ));\r\n    }\r\n\r\n    function renderSvg() {\r\n        return colors.map((child: any, index: number) => (\r\n            <div>\r\n                <svg width='25' height='25' >\r\n                    <rect\r\n                        width='25'\r\n                        height='25'\r\n                        fill={child}\r\n                        strokeWidth='0.75'\r\n                        stroke={child}\r\n                        fillOpacity='0.75'\r\n                        strokeOpacity='1'\r\n                    />\r\n                </svg>\r\n                <span>{' > ' + classes[index]}\r\n                </span>\r\n\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    const { title } = props\r\n    return (\r\n        <>\r\n            <p>{title}</p>\r\n            {renderSvg()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Legend;\r\n"]},"metadata":{},"sourceType":"module"}