{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Documents\\\\dashboard_client\\\\src\\\\components\\\\Table.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { MapUtils } from '../utils/MapUtils';\nimport { proxyUrls } from '../utils/MapConfig';\n\nconst Table = props => {\n  const [table, setTable] = useState([]);\n  let {\n    result\n  } = props;\n\n  function createTablefromGeoJson() {\n    MapUtils.getGeojson(proxyUrls[1]).then(data => data).then(featureCollection => featureCollection.jsonb_build_object).then(features => {\n      console.log(features.features);\n\n      for (let i = 0; i < features.length; i++) {\n        //@ts-ignore\n        setTable(table => [...table, features.features[i].properties.stt_name]);\n      }\n    }).then(table => console.log(table));\n  }\n\n  useEffect(() => {\n    createTablefromGeoJson();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    id: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, table.map(function (item, key) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, item.stt_name));\n  }))));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/Fabi/Documents/dashboard_client/src/components/Table.tsx"],"names":["React","useEffect","useState","MapUtils","proxyUrls","Table","props","table","setTable","result","createTablefromGeoJson","getGeojson","then","data","featureCollection","jsonb_build_object","features","console","log","i","length","properties","stt_name","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAwB;AAElC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAI;AACAO,IAAAA;AADA,MAEAH,KAFJ;;AAIA,WAASI,sBAAT,GAAkC;AAC9BP,IAAAA,QAAQ,CAACQ,UAAT,CAAoBP,SAAS,CAAC,CAAD,CAA7B,EACKQ,IADL,CACUC,IAAI,IAAIA,IADlB,EAEKD,IAFL,CAEUE,iBAAiB,IAAIA,iBAAiB,CAACC,kBAFjD,EAGKH,IAHL,CAGUI,QAAQ,IAAI;AAEdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACA,QAArB;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC;AACAX,QAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWS,QAAQ,CAACA,QAAT,CAAkBG,CAAlB,EAAqBE,UAArB,CAAgCC,QAA3C,CAAV,CAAR;AACH;AAEJ,KAXL,EAYKV,IAZL,CAYUL,KAAK,IAAIU,OAAO,CAACC,GAAR,CAAYX,KAAZ,CAZnB;AAaH;;AAGDN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,sBAAsB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,uDACI;AAAO,IAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,KAAK,CAAEgB,GAAP,CAAW,UAAUC,IAAV,EAAqBC,GAArB,EAA+B;AAE9C,wBACI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACF,QAAV,CADJ,CADJ;AAMH,GARO,CAAR,CADJ,CADJ,CADJ;AAgBH,CA7CD;;AA+CA,eAAejB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ITableProps } from '../types/types';\r\nimport { MapUtils } from '../utils/MapUtils';\r\nimport { proxyUrls } from '../utils/MapConfig';\r\n\r\nconst Table = (props: ITableProps) => {\r\n\r\n    const [table, setTable] = useState([])\r\n\r\n    let {\r\n        result\r\n    } = props\r\n\r\n    function createTablefromGeoJson() {\r\n        MapUtils.getGeojson(proxyUrls[1])\r\n            .then(data => data)\r\n            .then(featureCollection => featureCollection.jsonb_build_object)\r\n            .then(features => {\r\n\r\n                console.log(features.features)\r\n                for (let i = 0; i < features.length; i++) {\r\n                    //@ts-ignore\r\n                    setTable(table => [...table, features.features[i].properties.stt_name])\r\n                }\r\n\r\n            })\r\n            .then(table => console.log(table))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        createTablefromGeoJson()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <table id='table'>\r\n                <tbody>{table!.map(function (item: any, key: any) {\r\n\r\n                    return (\r\n                        <tr key={key}>\r\n                            <td>{item.stt_name}</td>\r\n                        </tr>\r\n                    )\r\n\r\n                })}</tbody>\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}