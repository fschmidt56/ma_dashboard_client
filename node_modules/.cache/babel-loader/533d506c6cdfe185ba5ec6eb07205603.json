{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\dashboard_client\\\\src\\\\components\\\\Legend.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\n\nconst Legend = props => {\n  const [classes, setClasses] = useState([0, 87, 173, 260, 346, 433, 519]);\n  const [colors, setColors] = useState(['rgba(180,180,180,0.75)', 'rgba(254,240,217,0.75)', 'rgba(253,212,158,0.75)', 'rgba(253,187,132,0.75)', 'rgba(252,141,89,0.75)', 'rgba(227,74,51,0.75)', 'rgba(179,0,0,0.75)']);\n  let fetchCounter = 0;\n  useEffect(() => {\n    fetch('http://192.168.2.185:8000/range').then(data => data.json()).then(arr => setClasses(arr)).then(() => fetchCounter = 1);\n  }, []);\n\n  function renderSvg() {\n    return colors.map((child, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"30\",\n      height: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      width: \"25\",\n      height: \"25\",\n      fill: child,\n      strokeWidth: \"0.75\",\n      stroke: child,\n      fillOpacity: \"0.75\",\n      strokeOpacity: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, ' > ' + classes[index])));\n  }\n\n  const {\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", fetchCounter === 1 ? renderSvg() : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Legend;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/components/Legend.tsx"],"names":["React","useState","useEffect","Loading","Legend","props","classes","setClasses","colors","setColors","fetchCounter","fetch","then","data","json","arr","renderSvg","map","child","index","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAyB;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,CAAD,CAAtC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CACjC,wBADiC,EAEjC,wBAFiC,EAGjC,wBAHiC,EAIjC,wBAJiC,EAKjC,uBALiC,EAMjC,sBANiC,EAOjC,oBAPiC,CAAD,CAApC;AAUA,MAAIS,YAAY,GAAG,CAAnB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,GAAG,IAAIR,UAAU,CAACQ,GAAD,CAF3B,EAGKH,IAHL,CAGU,MAAMF,YAAY,GAAG,CAH/B;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,WAASM,SAAT,GAAqB;AACjB,WAAOR,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAaC,KAAb,kBACd;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,IAAX;AAAgB,MAAA,MAAM,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAC,IADV;AAEI,MAAA,MAAM,EAAC,IAFX;AAGI,MAAA,IAAI,EAAED,KAHV;AAII,MAAA,WAAW,EAAC,MAJhB;AAKI,MAAA,MAAM,EAAEA,KALZ;AAMI,MAAA,WAAW,EAAC,MANhB;AAOI,MAAA,aAAa,EAAC,GAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,QAAQZ,OAAO,CAACa,KAAD,CAAtB,CAZJ,CADG,CAAP;AAkBH;;AAED,QAAM;AAAEC,IAAAA;AAAF,MAAYf,KAAlB;AACA,sBACI,+CACIK,YAAY,KAAK,CAAjB,GACIM,SAAS,EADb,gBAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADJ;AASH,CArDD;;AAuDA,eAAeZ,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ILegendProps } from '../types/types';\r\nimport Loading from './Loading';\r\n\r\nconst Legend = (props: ILegendProps) => {\r\n\r\n    const [classes, setClasses] = useState([0, 87, 173, 260, 346, 433, 519]);\r\n    const [colors, setColors] = useState([\r\n        'rgba(180,180,180,0.75)',\r\n        'rgba(254,240,217,0.75)',\r\n        'rgba(253,212,158,0.75)',\r\n        'rgba(253,187,132,0.75)',\r\n        'rgba(252,141,89,0.75)',\r\n        'rgba(227,74,51,0.75)',\r\n        'rgba(179,0,0,0.75)',\r\n    ])\r\n\r\n    let fetchCounter = 0;\r\n\r\n    useEffect(() => {\r\n        fetch('http://192.168.2.185:8000/range')\r\n            .then(data => data.json())\r\n            .then(arr => setClasses(arr))\r\n            .then(() => fetchCounter = 1)\r\n    }, [])\r\n\r\n    function renderSvg() {\r\n        return colors.map((child: any, index: number) => (\r\n            <div key={index}>\r\n                <svg width='30' height='30' >\r\n                    <rect\r\n                        width='25'\r\n                        height='25'\r\n                        fill={child}\r\n                        strokeWidth='0.75'\r\n                        stroke={child}\r\n                        fillOpacity='0.75'\r\n                        strokeOpacity='1'\r\n                    />\r\n                </svg>\r\n                <span>{' > ' + classes[index]}\r\n                </span>\r\n\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    const { title } = props\r\n    return (\r\n        <> {\r\n            fetchCounter === 1 ?\r\n                renderSvg()\r\n                :\r\n                <Loading />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Legend;\r\n"]},"metadata":{},"sourceType":"module"}