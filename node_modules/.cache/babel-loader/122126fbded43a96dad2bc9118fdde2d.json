{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Documents\\\\dashboard_client\\\\src\\\\components\\\\Table.tsx\";\nimport React, { useEffect } from 'react';\nimport { MapUtils } from '../utils/MapUtils';\nimport { proxyUrls } from '../utils/MapConfig';\n\nconst Table = props => {\n  let {\n    result\n  } = props;\n\n  function createTablefromGeoJson() {\n    MapUtils.getGeojson(proxyUrls[1]).then(data => data).then(featureCollection => featureCollection.jsonb_build_object).then(features => {\n      features.features.forEach(function (entry) {\n        result += \"<tr><td>\" + entry.stt_name + \"</td></tr>\";\n        return result;\n      });\n    });\n  }\n\n  useEffect(() => {\n    createTablefromGeoJson();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, () => createTablefromGeoJson()));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/Fabi/Documents/dashboard_client/src/components/Table.tsx"],"names":["React","useEffect","MapUtils","proxyUrls","Table","props","result","createTablefromGeoJson","getGeojson","then","data","featureCollection","jsonb_build_object","features","forEach","entry","stt_name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAwB;AAElC,MAAI;AACAC,IAAAA;AADA,MAEAD,KAFJ;;AAIA,WAASE,sBAAT,GAAkC;AAC9BL,IAAAA,QAAQ,CAACM,UAAT,CAAoBL,SAAS,CAAC,CAAD,CAA7B,EACKM,IADL,CACUC,IAAI,IAAIA,IADlB,EAEKD,IAFL,CAEUE,iBAAiB,IAAIA,iBAAiB,CAACC,kBAFjD,EAGKH,IAHL,CAGUI,QAAQ,IAAI;AACdA,MAAAA,QAAQ,CAACA,QAAT,CAAkBC,OAAlB,CAA0B,UAAUC,KAAV,EAAsB;AAC5CT,QAAAA,MAAM,IAAI,aAAaS,KAAK,CAACC,QAAnB,GAA8B,YAAxC;AACA,eAAOV,MAAP;AACH,OAHD;AAKH,KATL;AAUH;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,sBAAsB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,uDACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MAAMA,sBAAsB,EADjC,CADJ,CADJ;AAQH,CA/BD;;AAiCA,eAAeH,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { ITableProps } from '../types/types';\r\nimport { MapUtils } from '../utils/MapUtils';\r\nimport { proxyUrls } from '../utils/MapConfig';\r\n\r\nconst Table = (props: ITableProps) => {\r\n\r\n    let {\r\n        result\r\n    } = props\r\n\r\n    function createTablefromGeoJson() {\r\n        MapUtils.getGeojson(proxyUrls[1])\r\n            .then(data => data)\r\n            .then(featureCollection => featureCollection.jsonb_build_object)\r\n            .then(features => {\r\n                features.features.forEach(function (entry: any) {\r\n                    result += \"<tr><td>\" + entry.stt_name + \"</td></tr>\";\r\n                    return result;\r\n                }\r\n                )\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        createTablefromGeoJson()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div id='table'>\r\n                {() => createTablefromGeoJson()}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}