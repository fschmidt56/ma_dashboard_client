{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Desktop\\\\Uni\\\\Master\\\\4. Semester\\\\MA\\\\WebGIS\\\\dashboard_client\\\\src\\\\components\\\\Map.tsx\";\nimport React, { useEffect } from 'react';\nimport 'ol/ol.css';\nimport { MapUtils } from '../utils/MapUtils';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMap } from '../redux/actions/setMapAction';\nimport Loading from './Loading';\nimport Style from 'ol/style/Style';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport { fillOpacity } from '../utils/MapStyles';\n\nconst Basemap = props => {\n  const map = useSelector(state => state.currentMapState.map);\n  const fetching = useSelector(state => state.currentFetchState.fetching);\n  const classes = useSelector(state => state.currentClassesState.classes);\n  const dispatch = useDispatch();\n  const {\n    id,\n    mapContainer,\n    proxyUrl\n  } = props;\n\n  function defaultStyle(feature) {\n    let style = new Style({\n      fill: new Fill({\n        color: getFillColor(feature.get('count'))\n      }),\n      stroke: new Stroke({\n        color: getFillColor(feature.get('count'))\n      })\n    });\n    return style;\n  }\n\n  function getFillColor(d) {\n    let classborder = classes;\n\n    if (classborder.length !== 0) {\n      return d > classborder[5] ? `rgba(179,0,0,${fillOpacity})` : d > classborder[4] ? `rgba(227,74,51,${fillOpacity})` : d > classborder[3] ? `rgba(252,141,89,${fillOpacity})` : d > classborder[2] ? `rgba(253,187,132,${fillOpacity})` : d > classborder[1] ? `rgba(253,212,158,${fillOpacity})` : d > classborder[0] ? `rgba(254,240,217,${fillOpacity})` : `rgba(180,180,180,${fillOpacity})`;\n    } else {\n      return;\n    }\n  }\n\n  const basemap = MapUtils.createMap(mapContainer); //@ts-ignore\n\n  dispatch(setMap(basemap));\n  MapUtils.createPgLayer(proxyUrl, basemap, defaultStyle);\n  useEffect(() => {\n    console.log('use effect in map running.');\n  }, [classes]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", fetching ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Basemap;","map":{"version":3,"sources":["C:/Users/Fabi/Desktop/Uni/Master/4. Semester/MA/WebGIS/dashboard_client/src/components/Map.tsx"],"names":["React","useEffect","MapUtils","useDispatch","useSelector","setMap","Loading","Style","Fill","Stroke","fillOpacity","Basemap","props","map","state","currentMapState","fetching","currentFetchState","classes","currentClassesState","dispatch","id","mapContainer","proxyUrl","defaultStyle","feature","style","fill","color","getFillColor","get","stroke","d","classborder","length","basemap","createMap","createPgLayer","console","log"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect } from 'react';\r\nimport 'ol/ol.css';\r\nimport { IMapProps } from '../types/types';\r\nimport { MapUtils } from '../utils/MapUtils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setMap } from '../redux/actions/setMapAction';\r\nimport { RootState } from '../redux/store/store';\r\nimport Loading from './Loading';\r\nimport { FeatureLike } from 'ol/Feature';\r\nimport Style from 'ol/style/Style';\r\nimport Fill from 'ol/style/Fill';\r\nimport Stroke from 'ol/style/Stroke';\r\nimport { fillOpacity } from '../utils/MapStyles';\r\n\r\nconst Basemap = (props: IMapProps) => {\r\n\r\n    const map = useSelector((state: RootState) => state.currentMapState.map)\r\n    const fetching = useSelector((state: RootState) => state.currentFetchState.fetching)\r\n    const classes = useSelector((state: RootState) => state.currentClassesState.classes);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { id, mapContainer, proxyUrl } = props\r\n\r\n\r\n    function defaultStyle(feature: FeatureLike): Style {\r\n        let style: Style = new Style({\r\n            fill: new Fill({\r\n                color: getFillColor(feature.get('count')),\r\n            }),\r\n            stroke: new Stroke({\r\n                color: getFillColor(feature.get('count')),\r\n            })\r\n        });\r\n        return style;\r\n    }\r\n\r\n    function getFillColor(d: number) {\r\n        let classborder: number[] = classes;\r\n        if (classborder.length !== 0) {\r\n            return d > classborder[5] ? `rgba(179,0,0,${fillOpacity})` :\r\n                d > classborder[4] ? `rgba(227,74,51,${fillOpacity})` :\r\n                    d > classborder[3] ? `rgba(252,141,89,${fillOpacity})` :\r\n                        d > classborder[2] ? `rgba(253,187,132,${fillOpacity})` :\r\n                            d > classborder[1] ? `rgba(253,212,158,${fillOpacity})` :\r\n                                d > classborder[0] ? `rgba(254,240,217,${fillOpacity})` :\r\n                                    `rgba(180,180,180,${fillOpacity})`;\r\n        }\r\n        else { return }\r\n    }\r\n\r\n    const basemap = MapUtils.createMap(mapContainer)\r\n    //@ts-ignore\r\n    dispatch(setMap(basemap))\r\n    MapUtils.createPgLayer(proxyUrl, basemap, defaultStyle)\r\n    useEffect(() => {\r\n        console.log('use effect in map running.')\r\n\r\n    }, [classes]);\r\n\r\n    return (\r\n        <> {\r\n            fetching ?\r\n                <Loading />\r\n                :\r\n                <div id={id} className='map'>\r\n                </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Basemap;"]},"metadata":{},"sourceType":"module"}