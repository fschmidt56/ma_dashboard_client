{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabi\\\\Documents\\\\dashboard_client\\\\src\\\\components\\\\Table.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { MapUtils } from '../utils/MapUtils';\nimport { proxyUrls } from '../utils/MapConfig';\n\nconst Table = props => {\n  const [table, setTable] = useState(null);\n  let {\n    result\n  } = props;\n\n  function createTablefromGeoJson() {\n    MapUtils.getGeojson(proxyUrls[1]).then(data => data).then(featureCollection => featureCollection.jsonb_build_object).then(features => {\n      setTable(features.features);\n      console.log(features.features);\n    });\n  }\n\n  useEffect(() => {\n    createTablefromGeoJson();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    id: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, () => createTablefromGeoJson()));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/Fabi/Documents/dashboard_client/src/components/Table.tsx"],"names":["React","useEffect","useState","MapUtils","proxyUrls","Table","props","table","setTable","result","createTablefromGeoJson","getGeojson","then","data","featureCollection","jsonb_build_object","features","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAwB;AAElC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,MAAI;AACAO,IAAAA;AADA,MAEAH,KAFJ;;AAIA,WAASI,sBAAT,GAAkC;AAC9BP,IAAAA,QAAQ,CAACQ,UAAT,CAAoBP,SAAS,CAAC,CAAD,CAA7B,EACKQ,IADL,CACUC,IAAI,IAAIA,IADlB,EAEKD,IAFL,CAEUE,iBAAiB,IAAIA,iBAAiB,CAACC,kBAFjD,EAGKH,IAHL,CAGUI,QAAQ,IAAI;AACdR,MAAAA,QAAQ,CAACQ,QAAQ,CAACA,QAAV,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACA,QAArB;AACH,KANL;AAOH;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,sBAAsB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,uDACI;AAAO,IAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MAAMA,sBAAsB,EADjC,CADJ,CADJ;AAQH,CA9BD;;AAgCA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ITableProps } from '../types/types';\r\nimport { MapUtils } from '../utils/MapUtils';\r\nimport { proxyUrls } from '../utils/MapConfig';\r\n\r\nconst Table = (props: ITableProps) => {\r\n\r\n    const [table, setTable] = useState(null)\r\n\r\n    let {\r\n        result\r\n    } = props\r\n\r\n    function createTablefromGeoJson() {\r\n        MapUtils.getGeojson(proxyUrls[1])\r\n            .then(data => data)\r\n            .then(featureCollection => featureCollection.jsonb_build_object)\r\n            .then(features => {\r\n                setTable(features.features)\r\n                console.log(features.features)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        createTablefromGeoJson()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <table id='table'>\r\n                {() => createTablefromGeoJson()}\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}